name: working CI

on:
  push:
    tags:
      - '*'
    branches:
      - '*'

  pull_request:
    branches:
      - '*'
    types: [opened, synchronize]
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - run: npx lerna bootstrap
      - run: npx lerna run lint -- --fix
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: |
            packages/**/dist

  pre_release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - run: npx lerna bootstrap 
      - run: yarn lerna version patch --no-git-tag-version --no-push --yes
      - run: yarn lerna version "$(node -e "console.log(require('./lerna.json').version)")-pre.${{ github.run_number }}" --no-git-tag-version --yes
      - run: git add . && git commit -m "Prerelease version" --no-verify
      - run: yarn run ci:publish-next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  release:
    runs-on: ubuntu-latest

    needs: pre_release

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - run: npx lerna bootstrap
      - run: yarn run ci:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  working:
      runs-on: ubuntu-latest

      needs: release

      if: ${{ github.ref == 'refs/heads/working' }}

      steps:
        # Update the Microfrontends to reflect what we have in the Working branch
        - uses: garygrossgarten/github-action-ssh@release
          name: Run the Update MicroFronEnd Script
          with:
              command: cd /usr/share/tomcat/microfrontends/working && sh update_microfrontends.sh
              host: ${{ secrets.HISTAC_HOST }}
              username: ${{ secrets.HISTAC_USERNAME }}
              privateKey: ${{ secrets.HISTAC_KEY}}
              port: ${{ secrets.HISTAC_PORT }}